cmake_minimum_required(VERSION 2.8)

project(DICOM2NRRD)

include(ExternalProject)

set(PREREQS ${CMAKE_CURRENT_BINARY_DIR}/Prereqs)

if(APPLE OR UNIX)
set(LIB_PREFIX lib)
set(LIB_SUFFIX .a)
endif()

set(COMMON_CMAKE_FLAGS
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
  -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
  -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
  -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
  -DBUILD_TESTING:BOOL=OFF
  -DBUILD_SHARED_LIBS:BOOL=OFF
)

# Set CMake OSX variable to pass down the external project
set(CMAKE_OSX_EXTERNAL_PROJECT_ARGS)
if(APPLE)
  list(APPEND CMAKE_OSX_EXTERNAL_PROJECT_ARGS
    -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
    -DCMAKE_OSX_SYSROOT=${CMAKE_OSX_SYSROOT}
    -DCMAKE_OSX_DEPLOYMENT_TARGET=${CMAKE_OSX_DEPLOYMENT_TARGET})
endif()

if(NOT USE_SYSTEM_ITK)
  set(ITK_REPOSITORY git://itk.org/ITK.git)
  set(ITK_TAG_COMMAND GIT_TAG v4.0.0)
  ExternalProject_Add(ITK
    GIT_REPOSITORY ${ITK_REPOSITORY}
    ${ITK_TAG_COMMAND}
    UPDATE_COMMAND ""
    INSTALL_COMMAND ""
    SOURCE_DIR ITK
    BINARY_DIR ITK-build
    CMAKE_GENERATOR ${gen}
    CMAKE_ARGS
      ${COMMON_CMAKE_FLAGS}
      -DBUILD_TESTING:BOOL=OFF
      -DBUILD_EXAMPLES:BOOL=OFF
      -DITK_LEGACY_REMOVE:BOOL=ON
      -DITK_BUILD_ALL_MODULES:BOOL=ON
      -DITK_USE_REVIEW:BOOL=ON
      -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
      -DINSTALL_WRAP_ITK_COMPATIBILITY:BOOL=OFF
    )
  set(ITK_DIR ${CMAKE_CURRENT_BINARY_DIR}/ITK-build)
else()
  ExternalProject_Add(ITK
    SOURCE_DIR ITK
    BINARY_DIR ITK-build
    DOWNLOAD_COMMAND ""
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
    DEPENDS
    ${ITKv4_DEPENDENCIES}
    )
  find_package(ITK 4 REQUIRED)
endif()

ExternalProject_add(SlicerExecutionModel
  GIT_REPOSITORY git://github.com/Chaircrusher/SlicerExecutionModel.git
  GIT_TAG "origin/master"
  UPDATE_COMMAND ""
  BINARY_DIR SlicerExecutionModel-build
  CMAKE_ARGS
  ${COMMON_EXTERNAL_PROJECT_ARGS}
  ${CMAKE_OSX_EXTERNAL_PROJECT_ARGS}
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  ${COMMON_CMAKE_FLAGS}
  -DITK_DIR:PATH=${ITK_DIR}
  INSTALL_COMMAND ""
  DEPENDS ITK
  )
set(SlicerExecutionModel_DIR ${CMAKE_BINARY_DIR}/SlicerExecutionModel-build)

ExternalProject_add(libtiff
  URL ftp://dicom.offis.de/pub/dicom/offis/software/dcmtk/dcmtk360/support/tiff-3.9.4.tar.gz
  URL_MD5 2006c1bdd12644dbf02956955175afd6
  CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${PREREQS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}
  )

ExternalProject_add(dcmtk
  GIT_REPOSITORY "git://git.dcmtk.org/dcmtk.git"
  GIT_TAG 915b1c59e08459cd934925c0599c78a43e4b2b1f
  UPDATE_COMMAND ""
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${PREREQS}
  ${COMMON_CMAKE_FLAGS}
  -DDCMTK_WITH_XML:BOOL=ON
  -DDCMTK_WITH_PRIVATE_TAGS:BOOL=ON
  -DTIFF_INCLUDE_DIR:PATH=${PREREQS}/include
  -DTIFF_LIBRARY:FILEPATH=${PREREQS}/lib/${LIB_PREFIX}tiff${LIB_SUFFIX}
  DEPENDS libtiff
)
set(dcmtkPatchScript ${CMAKE_CURRENT_LIST_DIR}/dcmtkPatchScript.cmake)
set(dcmtkFileToFix ${CMAKE_CURRENT_BINARY_DIR}/dcmtk-prefix/src/dcmtk/CMake/GenerateDCMTKConfigure.cmake)

ExternalProject_Add_Step(dcmtk fixGenerateConfig
  COMMENT "One step of the configuration is broke with respect to strerror_r"
  DEPENDEES download
  DEPENDERS configure
  ALWAYS 1
  COMMAND ${CMAKE_COMMAND} -Dfixfile=${dcmtkFileToFix} -P ${dcmtkPatchScript}
)

set(proj DicomToNRRDConverter)
ExternalProject_add(${proj}
  DEPENDS dcmtk SlicerExecutionModel ITK
  DOWNLOAD_COMMAND ""
  INSTALL_COMMAND  ""
  SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${proj}
  BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/${proj}-build
  CMAKE_ARGS
  -DRUN_EXTENDED_LOCAL_TESTING:BOOL=ON
  -DITK_DIR:PATH=${ITK_DIR}
  -DDCMTK_DIR:PATH=${PREREQS}
  ${COMMON_CMAKE_FLAGS}
  -DSlicerExecutionModel_DIR:PATH=${SlicerExecutionModel_DIR}
)

